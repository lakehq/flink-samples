version: "3.8"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - minikube
    healthcheck:
      test: ["CMD", "zookeeper-shell", "zookeeper:2181", "ls", "/"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 6

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
    networks:
      - minikube
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server=kafka:9092", "--list"]
      start_period: 30s
      interval: 10s
      timeout: 5s
      retries: 6

  minio:
    image: minio/minio:RELEASE.2023-10-07T15-07-38Z
    container_name: "${MINIO_CONTAINER_NAME:-minio}"
    hostname: minio
    command: ["server", "--address", ":19000", "--console-address", ":19001"]
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: miniopwd
      MINIO_VOLUMES: /mnt/data
    volumes:
      - minio-data:/mnt/data
    networks:
      - minikube
    ports:
      - "19000:19000"
      - "19001:19001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:19000/minio/health/live"]
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 6

networks:
  minikube:
    name: minikube
    external: true

volumes:
  minio-data:
    driver: local
